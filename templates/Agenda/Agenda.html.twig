{% extends 'base.html.twig' %}
{% block title %}Agenda
{% endblock %}
{% block body %}
    {% if is_granted('ROLE_FORMATEUR') %}
        <head>
            <meta charset="UTF-8">
            <title>Agenda</title>
        </head>
        <h1 style="text-align: center">Agenda</h1>
        <div class="container">
            {% if is_granted('ROLE_SECRETAIRE') %}
                <a href="{{ path('calendar_index') }}" class="btn btn-primary btn-lg active" role="button"
                   aria-pressed="true" style="margin: 5px 5px 5px 0px">Ajouter/Editer un cr√©neau</a>
            {% endif %}
            <div id="calendrier"></div>
        </div>

    {% endif %}
{% endblock %}


{% block javascripts %}
    <script>
        window.onload = () => {
            let calendarElt = document.querySelector("#calendrier")

            let calendar = new FullCalendar.Calendar(calendarElt, {
                initialView: "timeGridWeek",
                locale: "fr",
                timeZone: "Europe/Paris",
                headerToolbar: {
                    start: "prev,next today",
                    center: "title",
                    end: "dayGridMonth,timeGridWeek"
                },
                events: {{ data|raw }},
                {% if is_granted('ROLE_SECRETAIRE') %}
                editable: true,
                {% endif %}
                eventResizableFromStart: true,
                businessHours: {
                    // days of week. an array of zero-based day of week integers (0=Sunday)
                    daysOfWeek: [ 1, 2, 3, 4, 5 ], // Monday - Thursday

                    startTime: '8:00', // a start time (10am in this example)
                    endTime: '18:00', // an end time (6pm in this example)
                },
                weekends:false

            })

            {% if is_granted('ROLE_SECRETAIRE') %}
            calendar.on('eventChange', (e) => {
                let url = `/api/${e.event.id}/edit`
                let donnees = {
                    "title": e.event.title,
                    "description": e.event.extendedProps.description,
                    "start": e.event.start,
                    "end": e.event.end,
                    "backgroundColor": e.event.backgroundColor,
                    "borderColor": e.event.borderColor,
                    "textColor": e.event.textColor
                }

                let xhr = new XMLHttpRequest

                xhr.open("PUT", url)
                xhr.send(JSON.stringify(donnees))
            })
            {% endif %}
            calendar.render()
        }
    </script>
{% endblock %}